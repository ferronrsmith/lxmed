package net.sourceforge.lxmed.gui;

import java.awt.BorderLayout;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.InputMap;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;
import net.sourceforge.lxmed.model.Categorie;
import net.sourceforge.lxmed.model.MenuItem;
import net.sourceforge.lxmed.model.Model;
import net.sourceforge.lxmed.persistence.Configuration;

/**
 *
 * @author <a href="mailto:cicakmarko@yahoo.com">Marko Čičak</a>
 */
public class MenuItemDialog extends javax.swing.JDialog {

    protected MenuItem menuItem;
    protected ComboBoxModel cbm;
    protected boolean newItem = false;

    /** Creates new form MenuItemDialog */
    public MenuItemDialog(java.awt.Frame parent, MenuItem item) {
        super(parent, true);
        this.menuItem = item;
        cbm = new DefaultComboBoxModel(Model.getModel().getCategories().toArray());
        initComponents();
        getRootPane().setDefaultButton(btnOk);
        setLocationRelativeTo(null);

        // close on Esc
        this.getRootPane().getActionMap().put("close", new AbstractAction() {

            public void actionPerformed(ActionEvent e) {
                btnCancelActionPerformed(e);
            }
        });
        InputMap map = this.getRootPane().getInputMap(
                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        map.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "close");

        if (item != null) {
            setTitle("Editig menu " + menuItem.getName());
            updateGui();
        } else {
            newItem = true;
            setTitle("New menu item");
            readyForNew();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        GridBagConstraints gridBagConstraints;

        pnlIcon = new JPanel();
        pnlControls = new JPanel();
        btnCancel = new JButton();
        btnOk = new JButton();
        sepSouth = new JSeparator();
        pnlCenter = new JPanel();
        lblPath = new JLabel();
        txtPath = new JTextField();
        lblCategories = new JLabel();
        cbCategories = new JComboBox();
        lblName = new JLabel();
        txtName = new JTextField();
        lblCommand = new JLabel();
        txtCommand = new JTextField();
        btnBrowseCommand = new JButton();
        lblComment = new JLabel();
        txtComment = new JTextField();
        lblIcon = new JLabel();
        txtIcon = new JTextField();
        btnBrowseIcon = new JButton();
        cbVisible = new JCheckBox();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        pnlIcon.setFont(new Font("Dialog", 0, 11));
        getContentPane().add(pnlIcon, BorderLayout.WEST);

        pnlControls.setFont(new Font("Dialog", 0, 11));
        pnlControls.setLayout(new GridBagLayout());

        btnCancel.setFont(new Font("Dialog", 0, 11));
        btnCancel.setMnemonic('c');
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new Insets(10, 0, 10, 0);
        pnlControls.add(btnCancel, gridBagConstraints);

        btnOk.setFont(new Font("Dialog", 0, 11)); // NOI18N
        btnOk.setMnemonic('o');
        btnOk.setText("Ok");
        btnOk.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.anchor = GridBagConstraints.EAST;
        gridBagConstraints.insets = new Insets(10, 10, 10, 10);
        pnlControls.add(btnOk, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new Insets(0, 10, 0, 10);
        pnlControls.add(sepSouth, gridBagConstraints);

        getContentPane().add(pnlControls, BorderLayout.SOUTH);

        pnlCenter.setFont(new Font("Dialog", 0, 11));

        lblPath.setFont(new Font("Dialog", 0, 11));
        lblPath.setText("Path:");

        txtPath.setEditable(false);
        txtPath.setFont(new Font("Dialog", 0, 11));

        lblCategories.setDisplayedMnemonic('a');
        lblCategories.setFont(new Font("Dialog", 0, 11));
        lblCategories.setLabelFor(cbCategories);
        lblCategories.setText("Category:");

        cbCategories.setFont(new Font("Dialog", 0, 11)); // NOI18N
        cbCategories.setMaximumRowCount(15);
        cbCategories.setModel(cbm);

        lblName.setDisplayedMnemonic('n');
        lblName.setFont(new Font("Dialog", 0, 11));
        lblName.setLabelFor(txtName);
        lblName.setText("Name:");

        txtName.setFont(new Font("Dialog", 0, 11)); // NOI18N
        txtName.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent evt) {
                txtNameKeyTyped(evt);
            }
        });

        lblCommand.setDisplayedMnemonic('d');
        lblCommand.setFont(new Font("Dialog", 0, 11));
        lblCommand.setLabelFor(txtCommand);
        lblCommand.setText("Command:");

        txtCommand.setFont(new Font("Dialog", 0, 11));

        btnBrowseCommand.setFont(new Font("Dialog", 0, 11));
        btnBrowseCommand.setMnemonic('b');
        btnBrowseCommand.setText("Browse...");

        lblComment.setDisplayedMnemonic('m');
        lblComment.setFont(new Font("Dialog", 0, 11));
        lblComment.setLabelFor(txtComment);
        lblComment.setText("Comment:");

        txtComment.setFont(new Font("Dialog", 0, 11));

        lblIcon.setDisplayedMnemonic('i');
        lblIcon.setFont(new Font("Dialog", 0, 11));
        lblIcon.setLabelFor(txtIcon);
        lblIcon.setText("Icon:");

        txtIcon.setFont(new Font("Dialog", 0, 11));

        btnBrowseIcon.setFont(new Font("Dialog", 0, 11));
        btnBrowseIcon.setMnemonic('r');
        btnBrowseIcon.setText("Browse...");

        cbVisible.setFont(new Font("Dialog", 0, 11));
        cbVisible.setText("Visible");

        GroupLayout pnlCenterLayout = new GroupLayout(pnlCenter);
        pnlCenter.setLayout(pnlCenterLayout);
        pnlCenterLayout.setHorizontalGroup(
            pnlCenterLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(lblPath)
                    .addComponent(lblIcon)
                    .addComponent(lblComment)
                    .addComponent(lblCommand)
                    .addComponent(lblName)
                    .addComponent(lblCategories))
                .addPreferredGap(ComponentPlacement.UNRELATED)
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.LEADING)
                    .addComponent(cbVisible)
                    .addComponent(txtName, GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addGroup(Alignment.TRAILING, pnlCenterLayout.createSequentialGroup()
                        .addComponent(txtCommand, GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(btnBrowseCommand))
                    .addComponent(txtComment, GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                    .addGroup(Alignment.TRAILING, pnlCenterLayout.createSequentialGroup()
                        .addComponent(txtIcon, GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                        .addPreferredGap(ComponentPlacement.RELATED)
                        .addComponent(btnBrowseIcon))
                    .addComponent(cbCategories, 0, 452, Short.MAX_VALUE)
                    .addComponent(txtPath, GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlCenterLayout.setVerticalGroup(
            pnlCenterLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(pnlCenterLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(lblPath)
                    .addComponent(txtPath, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(lblCategories)
                    .addComponent(cbCategories, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.TRAILING)
                    .addComponent(lblName)
                    .addComponent(txtName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(lblCommand)
                    .addComponent(txtCommand, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseCommand))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(lblComment)
                    .addComponent(txtComment, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCenterLayout.createParallelGroup(Alignment.BASELINE)
                    .addComponent(lblIcon)
                    .addComponent(txtIcon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBrowseIcon))
                .addGap(18, 18, 18)
                .addComponent(cbVisible)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(pnlCenter, BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        saveItem();
    }//GEN-LAST:event_btnOkActionPerformed

    private void txtNameKeyTyped(KeyEvent evt) {//GEN-FIRST:event_txtNameKeyTyped
        SwingUtilities.invokeLater(new Runnable() {

            public void run() {
                if (newItem) {
                    txtPath.setText(Configuration.getAppsFolder() + "/" + getFileName(txtName.getText().trim()));
                }
            }
        });
    }//GEN-LAST:event_txtNameKeyTyped
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnBrowseCommand;
    private JButton btnBrowseIcon;
    private JButton btnCancel;
    private JButton btnOk;
    private JComboBox cbCategories;
    private JCheckBox cbVisible;
    private JLabel lblCategories;
    private JLabel lblCommand;
    private JLabel lblComment;
    private JLabel lblIcon;
    private JLabel lblName;
    private JLabel lblPath;
    private JPanel pnlCenter;
    private JPanel pnlControls;
    private JPanel pnlIcon;
    private JSeparator sepSouth;
    private JTextField txtCommand;
    private JTextField txtComment;
    private JTextField txtIcon;
    private JTextField txtName;
    private JTextField txtPath;
    // End of variables declaration//GEN-END:variables

    private void updateGui() {
        if (!Configuration.IS_ROOT && menuItem.isOnlyForAdmin()) {
            txtName.setEnabled(false);
            txtCommand.setEnabled(false);
            txtComment.setEnabled(false);
            txtIcon.setEnabled(false);
            cbCategories.setEnabled(false);
            cbVisible.setEnabled(false);
            btnOk.setEnabled(false);
        }

        txtPath.setText(menuItem.getPath().getAbsolutePath());
        txtName.setText(menuItem.getName());
        txtCommand.setText(menuItem.getExec());
        txtComment.setText(menuItem.getComment());
        txtIcon.setText(menuItem.getIconStr());
        cbCategories.setSelectedItem(menuItem.getCategorie());
        cbVisible.setSelected(!menuItem.isNoDisplay());
    }

    private void saveItem() {
        menuItem.setCategorie((Categorie) cbCategories.getSelectedItem());
        menuItem.setName(txtName.getText().trim());
    }

    private void readyForNew() {
        cbCategories.setSelectedIndex(0);
        txtPath.setText(Configuration.getAppsFolder());
    }

    private String getFileName(String name) {
        String[] forbidden = new String[]{"/", "\\", "?", "%", "*", ":", "|",
            "\"", "<", ">", ".", ",", ";", "'", "(", ")", " "};

        String ret = name;

        for (String string : forbidden) {
            ret = ret.replace(string, "_");
        }

        return ret + ".desktop";
    }
}
